{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;AAAA,gGAAiF;AACjF,uDAA6D;AAE7D,mFAAsD;AAEtD,+EAA2C;AAG3C,IAAa,aAAa,GAA1B,MAAa,aAAa;IACxB,YAA6B,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAGvD,OAAO;QACL,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IACnC,CAAC;IAGD,SAAS,CAAS,KAAY;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAGD,QAAQ;QACN,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;CAEF;AAdC;IADC,gBAAG,EAAC,OAAO,CAAC;;;gEACF,wBAAO,oBAAP,wBAAO;4CAEjB;AAGD;IADC,iBAAI,EAAC,OAAO,CAAC;IACH,oCAAI,GAAE;;iEAAQ,sBAAK,oBAAL,sBAAK;;8CAE7B;AAGD;IADC,gBAAG,EAAC,OAAO,CAAC;;;;6CAGZ;AAhBU,aAAa;IADzB,uBAAU,GAAE;iEAE8B,wBAAU,oBAAV,wBAAU;GADxC,aAAa,CAkBzB;AAlBY,sCAAa;;;;;;;;;;;;ACR1B,uDAAwC;AAExC,qFAAiD;AACjD,+EAA2C;AAO3C,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;AAAZ,SAAS;IALrB,mBAAM,EAAC;QACN,OAAO,EAAE,EAAE;QACX,WAAW,EAAE,CAAC,8BAAa,CAAC;QAC5B,SAAS,EAAE,CAAC,wBAAU,CAAC;KACxB,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;;;;;;ACTtB,uDAA4C;AAI5C,IAAa,UAAU,GAAvB,MAAa,UAAU;IAAvB;QAEE,cAAS,GAAS,EAAE;IActB,CAAC;IAXC,OAAO;QACL,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC;IACxC,CAAC;IAED,SAAS,CAAC,KAAW;QACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;CACF;AAhBY,UAAU;IADtB,uBAAU,GAAE;GACA,UAAU,CAgBtB;AAhBY,gCAAU;;;;;;;;;;;ACLvB,sGAAqC;;;;;;;;;;;;;;;;;AEArC;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;;AAEH,uDAAwC;AACxC,mDAA2C;AAE3C,6EAA6C;AAE7C,SAAe,SAAS;;QACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;QAChD,MAAM,YAAY,GAAG,KAAK,CAAC;QAC3B,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QACtC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvB,eAAM,CAAC,GAAG,CACR,kDAAkD,IAAI,IAAI,YAAY,EAAE,CACzE,CAAC;IACJ,CAAC;CAAA;AAED,SAAS,EAAE,CAAC","sources":["webpack://kudostories/./apps/api/src/app/app.controller.ts","webpack://kudostories/./apps/api/src/app/app.module.ts","webpack://kudostories/./apps/api/src/app/app.service.ts","webpack://kudostories/./libs/api-interfaces/src/index.ts","webpack://kudostories/./libs/api-interfaces/src/lib/api-interfaces.ts","webpack://kudostories/external commonjs \"@nestjs/common\"","webpack://kudostories/external commonjs \"@nestjs/core\"","webpack://kudostories/external commonjs \"tslib\"","webpack://kudostories/webpack/bootstrap","webpack://kudostories/./apps/api/src/main.ts"],"sourcesContent":["import { Kudos } from './../../../../libs/api-interfaces/src/lib/api-interfaces';\nimport { Body, Controller, Get, Post } from '@nestjs/common';\n\nimport { Message } from '@kudostories/api-interfaces';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  getData(): Message {\n    return this.appService.getData();\n  }\n\n  @Post('kudos')\n  postKudos(@Body() kudos: Kudos) {\n    return this.appService.saveKudos(kudos);\n  }\n\n  @Get('kudos')\n  getKudos(): Kudos[] {\n    return this.appService.getKudos();\n  }\n\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Kudos } from './../../../../libs/api-interfaces/src/lib/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { Message } from '@kudostories/api-interfaces';\n\n@Injectable()\nexport class AppService {\n\n  kudosList:Kudos[]=[]\n\n\n  getData(): Message {\n    return { message: 'Welcome to api!' };\n  }\n\n  saveKudos(kudos:Kudos) {\n    this.kudosList.push(kudos)\n  }\n\n  getKudos(): Kudos[] {\n    return this.kudosList;\n  }\n}\n","export * from './lib/api-interfaces';\n","import { SafeResourceUrl } from \"@angular/platform-browser\";\n\nexport interface Message {\n  message: string;\n}\n\nexport interface Kudos {\n  de: string;\n  para: string;\n  video: SafeResourceUrl;\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `ðŸš€ Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}